function [nvar_,ord_,P_,C_,D_,doublek_] = exportPCTParametersToCPP(nvariable,order,filename)

fprintf('exportPCTParametersToCPP(): initializing PCT type...\n');

[nvar,ord,P,C,D,doublek] = initPCT(nvariable,order);

nvar_ = nvar;
ord_ = ord;
P_ = P;
C_ = C;
D_ = D;
doublek_ = doublek;

fprintf('...DONE.\n\n'); beep;

%------------------------------------------------

fprintf('exportPCTParametersToCPP(): exporting PCT type attributes to C++ file...\n');

file = fopen(filename,'w');

%------------------------------------------------

fprintf(file,'//generated by MATLAB script to use in code using EPIC (gPC) C++ library\n');
fprintf(file,'//Copy the constants below to appropriate location in C++ code.\n');
fprintf(file,'//Rename the constants or change their data types if necessary.\n\n');

%------------------------------------------------

fprintf(file,'// Copy this into a header (.h, .hpp)\n\n');

fprintf(file,'const int NVAR = %d;\n', nvar);
fprintf(file,'const int ORD = %d;\n', ord);
fprintf(file,'const int P = %d;\n', P);
fprintf(file,'extern const double C[%d];\n', P*P*P);

%------------------------------------------------

% fprintf(file,'const double doublek[] = { ');
% fprintf(file,'%.15f', doublek(1));
% for i = 2:length(doublek)
%     fprintf(file,', %.15f', doublek(i));
% end
% fprintf(file,'};\n');

fprintf(file,'\n');

%------------------------------------------------

C1D = zeros(1,P*P*P);

for i = 1:P

    for j = 1:P
       
        for k = 1:P
           
            C1D( (i-1)*P*P + (j-1)*P + k ) = C(i,j,k);
            
        end
        
    end
    
end


fprintf(file,'// Copy this into a source file (.c, .cpp, .cc)\n\n');

fprintf(file,'extern const double C[%d] = { \n', P*P*P);
fprintf(file,'%.15f,\n',C1D(1:end-1));
fprintf(file,'%.15f\n};\n',C1D(end));    

%------------------------------------------------

fclose(file);

fprintf('...DONE.\n\n'); beep;

end % function